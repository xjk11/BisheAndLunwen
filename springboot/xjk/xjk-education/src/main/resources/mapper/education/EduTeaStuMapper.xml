<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xjk.education.mapper.EduTeaStuMapper">

    <resultMap type="EduTeaStu" id="EduTeaStuResult">
        <result property="teaStuId"    column="tea_stu_id"    />
        <result property="teacherId"    column="teacher_id"    />
        <result property="studentId"    column="student_id"    />
    </resultMap>

    <sql id="selectEduTeaStuVo">
        select tea_stu_id, teacher_id, student_id from edu_tea_stu
    </sql>

    <select id="selectEduTeaStuList" parameterType="EduTeaStu" resultMap="EduTeaStuResult">
        <include refid="selectEduTeaStuVo"/>
        <where>
            <if test="teaStuId != null "> and tea_stu_id = #{teaStuId}</if>
            <if test="teacherId != null "> and teacher_id = #{teacherId}</if>
            <if test="studentId != null "> and student_id = #{studentId}</if>
        </where>
    </select>

    <select id="selectEduTeaStuWithNames"  parameterType="EduTeaStu" resultMap="EduTeaStuWithNamesResult">
        SELECT
            ts.tea_stu_id,
            ts.teacher_id,
            t.name AS teacher_name,
            ts.student_id,
            s.name AS student_name
        FROM
            edu_tea_stu ts
                JOIN
            edu_teachers t ON ts.teacher_id = t.teacher_id
                JOIN
            edu_students s ON ts.student_id = s.student_id
        <where>
            <if test="teaStuId != null "> and tea_stu_id = #{teaStuId}</if>
            <if test="teacherId != null "> and ts.teacher_id = #{teacherId}</if>
            <if test="studentId != null "> and ts.student_id = #{studentId}</if>
            <if test="teacherName != null and teacherName != ''"> and t.name like concat('%', #{teacherName}, '%')</if>
            <if test="studentName != null and studentName != ''"> and s.name like concat('%', #{studentName}, '%')</if>
        </where>
    </select>

    <resultMap type="EduTeaStu" id="EduTeaStuWithNamesResult">
        <result property="teaStuId" column="tea_stu_id"/>
        <result property="teacherId" column="teacher_id"/>
        <result property="teacherName" column="teacher_name"/>
        <result property="studentId" column="student_id"/>
        <result property="studentName" column="student_name"/>
    </resultMap>




    <select id="selectEduTeaStuByTeaStuId" parameterType="Long" resultMap="EduTeaStuResult">
        <include refid="selectEduTeaStuVo"/>
        where tea_stu_id = #{teaStuId}
    </select>

    <insert id="insertEduTeaStu" parameterType="EduTeaStu" useGeneratedKeys="true" keyProperty="teaStuId">
        insert into edu_tea_stu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="teacherId != null">teacher_id,</if>
            <if test="studentId != null">student_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="teacherId != null">#{teacherId},</if>
            <if test="studentId != null">#{studentId},</if>
        </trim>
    </insert>

    <update id="updateEduTeaStu" parameterType="EduTeaStu">
        update edu_tea_stu
        <trim prefix="SET" suffixOverrides=",">
            <if test="teacherId != null">teacher_id = #{teacherId},</if>
            <if test="studentId != null">student_id = #{studentId},</if>
        </trim>
        where tea_stu_id = #{teaStuId}
    </update>

    <delete id="deleteEduTeaStuByTeaStuId" parameterType="Long">
        delete from edu_tea_stu where tea_stu_id = #{teaStuId}
    </delete>

    <delete id="deleteEduTeaStuByTeaStuIds" parameterType="String">
        delete from edu_tea_stu where tea_stu_id in
        <foreach item="teaStuId" collection="array" open="(" separator="," close=")">
            #{teaStuId}
        </foreach>
    </delete>
</mapper>
