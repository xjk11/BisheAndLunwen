<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xjk.education.mapper.EduAvgMapper">

    <resultMap type="EduAvg" id="EduAvgResult">
        <result property="avgId"    column="avg_id"    />
        <result property="teacherId"    column="teacher_id"    />
        <result property="courseId"    column="course_id"    />
        <result property="classId"    column="class_id"    />
    </resultMap>

    <sql id="selectEduAvgVo">
        select avg_id, teacher_id, course_id, class_id from edu_avg
    </sql>

    <select id="selectEduAvgList" parameterType="EduAvg" resultMap="EduAvgResult">
        <include refid="selectEduAvgVo"/>
        <where>
            <if test="avgId != null "> and avg_id = #{avgId}</if>
            <if test="teacherId != null "> and teacher_id = #{teacherId}</if>
            <if test="courseId != null "> and course_id = #{courseId}</if>
            <if test="classId != null "> and class_id = #{classId}</if>
        </where>
    </select>

    <!-- 新增的查询方法 -->
    <select id="selectAverageScoreByClassCourseTeacher"  parameterType="EduAvg" resultMap="EduAvgVoResult">
        SELECT
        a.avg_id AS avg_id,
        et.user_id AS teacher_user_id,
        cl.class_name AS class_name,
        c.course_name AS course_name,
        AVG(es.exam_score) AS average_score
        FROM
        edu_avg a
        JOIN
        edu_students s ON a.class_id = s.class_id
        JOIN
        edu_class cl ON s.class_id = cl.class_id
        JOIN
        edu_scores es ON s.student_id = es.student_id
        JOIN
        edu_course c ON es.course_id = c.course_id
        JOIN
        edu_teachers et on a.teacher_id = et.teacher_id
        <where>
            a.course_id = es.course_id
            <if test="avgId != null "> and a.avg_id = #{avgId}</if>
            <if test="teacherUserId != null "> and et.user_id = #{teacherUserId}</if>
            <if test="className != null and className != ''"> and cl.class_name like concat('%', #{className}, '%')</if>
            <if test="courseName != null and courseName != ''"> and c.course_name like concat('%', #{courseName}, '%')</if>
        </where>
        GROUP BY
        a.avg_id, cl.class_name, c.course_name
        ORDER BY
        c.course_name
    </select>

    <resultMap type="EduAvgVo" id="EduAvgVoResult">
        <result property="avgId" column="avg_id" />
        <result property="className" column="class_name" />
        <result property="courseName" column="course_name" />
        <result property="teacherUserId" column="teacher_user_id" />
        <result property="averageScore" column="average_score" />
    </resultMap>

    <select id="selectEduAvgByAvgId" parameterType="Long" resultMap="EduAvgResult">
        <include refid="selectEduAvgVo"/>
        where avg_id = #{avgId}
    </select>

    <insert id="insertEduAvg" parameterType="EduAvg" useGeneratedKeys="true" keyProperty="avgId">
        insert into edu_avg
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="teacherId != null">teacher_id,</if>
            <if test="courseId != null">course_id,</if>
            <if test="classId != null">class_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="teacherId != null">#{teacherId},</if>
            <if test="courseId != null">#{courseId},</if>
            <if test="classId != null">#{classId},</if>
         </trim>
    </insert>

    <update id="updateEduAvg" parameterType="EduAvg">
        update edu_avg
        <trim prefix="SET" suffixOverrides=",">
            <if test="teacherId != null">teacher_id = #{teacherId},</if>
            <if test="courseId != null">course_id = #{courseId},</if>
            <if test="classId != null">class_id = #{classId},</if>
        </trim>
        where avg_id = #{avgId}
    </update>

    <delete id="deleteEduAvgByAvgId" parameterType="Long">
        delete from edu_avg where avg_id = #{avgId}
    </delete>

    <delete id="deleteEduAvgByAvgIds" parameterType="String">
        delete from edu_avg where avg_id in
        <foreach item="avgId" collection="array" open="(" separator="," close=")">
            #{avgId}
        </foreach>
    </delete>

</mapper>
