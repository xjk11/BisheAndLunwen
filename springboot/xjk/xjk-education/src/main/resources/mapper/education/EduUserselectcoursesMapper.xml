<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xjk.education.mapper.EduUserselectcoursesMapper">

    <resultMap type="EduUserselectcourses" id="EduUserselectcoursesResult">
        <result property="userSelectId"    column="user_select_id"    />
        <result property="userId"    column="user_id"    />
        <result property="selectId"    column="select_id"    />
    </resultMap>

    <sql id="selectEduUserselectcoursesVo">
        select user_select_id, user_id, select_id from edu_userselectcourses
    </sql>

    <select id="selectEduUserselectcoursesList" parameterType="EduUserselectcourses" resultMap="EduUserselectcoursesResult">
        <include refid="selectEduUserselectcoursesVo"/>
        <where>
            <if test="userSelectId != null "> and user_select_id = #{userSelectId}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="selectId != null "> and select_id = #{selectId}</if>
        </where>
    </select>

    <select id="selectEduUserSelectcoursesVoList" parameterType="EduSelectcourses" resultMap="EduUserSelectcoursesVoResult">
        SELECT
        usc.user_id,
        s.name AS student_name,
        usc.user_select_id,
        c.course_id,
        c.course_name,
        c.course_description,
        t.name AS teacher_name,
        sc.start_time,
        c.credits,
        sc.select_id,
        sc.start_time
        FROM
        edu_userselectcourses usc
        JOIN
        edu_selectcourses sc ON usc.select_id = sc.select_id
        JOIN
        edu_course c ON sc.course_id = c.course_id
        JOIN
        edu_teachers t ON sc.teacher_id = t.teacher_id
        JOIN
        edu_students s ON usc.user_id = s.user_id
        <where>
            <if test="userSelectId != null "> and user_select_id = #{userSelectId}</if>
            <if test="userId != null "> and usc.user_id = #{userId}</if>
            <if test="selectId != null "> and sc.select_id = #{selectId}</if>
            <if test="courseId != null "> and c.course_id = #{courseId}</if>
            <if test="courseName != null and courseName != ''"> and c.course_name like concat('%', #{courseName}, '%')</if>
            <if test="teacherName != null and teacherName != ''"> and t.name like concat('%', #{teacherName}, '%')</if>
            <if test="credits != null "> and c.credits = #{credits}</if>
            <if test="startTime != null  and startTime != ''"> and start_time = #{startTime}</if>
        </where>
    </select>

    <resultMap type="com.xjk.education.domain.vo.EduSelectcourseVo" id="EduUserSelectcoursesVoResult">
        <result property="userId" column="user_id"/>
        <result property="userSelectId" column="user_select_id"/>
        <result property="selectId" column="select_id"/>
        <result property="courseId" column="course_id"/>
        <result property="courseName" column="course_name"/>
        <result property="courseDescription" column="course_description"/>
        <result property="credits" column="credits"/>
        <result property="teacherName" column="teacher_name"/>
        <result property="studentName" column="student_name"/>
        <result property="startTime" column="start_time"/>
    </resultMap>

    <select id="selectEduUserselectcoursesByUserSelectId" parameterType="Long" resultMap="EduUserselectcoursesResult">
        <include refid="selectEduUserselectcoursesVo"/>
        where user_select_id = #{userSelectId}
    </select>

    <insert id="insertEduUserselectcourses" parameterType="EduUserselectcourses" useGeneratedKeys="true" keyProperty="userSelectId">
        insert into edu_userselectcourses
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="selectId != null">select_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="selectId != null">#{selectId},</if>
         </trim>
    </insert>

    <update id="updateEduUserselectcourses" parameterType="EduUserselectcourses">
        update edu_userselectcourses
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="selectId != null">select_id = #{selectId},</if>
        </trim>
        where user_select_id = #{userSelectId}
    </update>

    <delete id="deleteEduUserselectcoursesByUserSelectId" parameterType="Long">
        delete from edu_userselectcourses where user_select_id = #{userSelectId}
    </delete>

    <delete id="deleteEduUserselectcoursesByUserSelectIds" parameterType="String">
        delete from edu_userselectcourses where user_select_id in
        <foreach item="userSelectId" collection="array" open="(" separator="," close=")">
            #{userSelectId}
        </foreach>
    </delete>
</mapper>
