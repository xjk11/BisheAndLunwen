<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xjk.education.mapper.EduStudentsMapper">

    <resultMap type="EduStudents" id="EduStudentsResult">
        <result property="userId" column="user_id" />
        <result property="studentId" column="student_id" />
        <result property="name" column="name" />
        <result property="gender" column="gender" />
        <result property="birthDate" column="birth_date" />
        <result property="major" column="major" />
        <result property="deptId" column="dept_id" />
        <result property="enrollmentDate" column="enrollment_date" />
        <result property="createBy" column="create_by" />
        <result property="createTime" column="create_time" />
        <result property="updateBy" column="update_by" />
        <result property="updateTime" column="update_time" />
        <result property="className" column="class_name" /> <!-- 添加 className -->
    </resultMap>


    <sql id="selectEduStudentsVo">
        select
            s.user_id,
            s.student_id,
            s.name,
            s.gender,
            s.birth_date,
            s.major,
            s.dept_id,
            s.class_id,
            s.enrollment_date,
            s.create_by,
            s.create_time,
            s.update_by,
            s.update_time,
            c.class_name
        from
            edu_students s
                left join
            edu_class c on s.class_id = c.class_id
    </sql>

    <select id="selectEduStudentsList" parameterType="EduStudents" resultMap="EduStudentsResult">
        <include refid="selectEduStudentsVo"/>
        <where>
            <if test="studentId != null "> and s.student_id = #{studentId}</if>
            <if test="name != null  and name != ''"> and s.name like concat('%', #{name}, '%')</if>
            <if test="gender != null "> and s.gender = #{gender}</if>
            <if test="major != null  and major != ''"> and s.major like concat('%', #{major}, '%')</if>
            <if test="deptId != null "> and s.dept_id = #{deptId}</if>
            <if test="className != null"> and c.class_name like concat('%', #{className}, '%')</if> <!-- 修改为 c.class_name -->
            <if test="params.beginEnrollmentDate != null and params.beginEnrollmentDate != '' and params.endEnrollmentDate != null and params.endEnrollmentDate != ''"> and s.enrollment_date between #{params.beginEnrollmentDate} and #{params.endEnrollmentDate}</if>
        </where>
    </select>



    <select id="studentSelectTeachers" parameterType="EduTeachers" resultMap="EduStudentSelectTeachersResult">
        SELECT
            s.user_id AS student_user_id,
            s.name AS student_name,
            t.name AS teacher_name,
            t.gender AS teacher_gender,
            t.dept_id AS dept_id,
            t.title AS teacher_title,
            t.hire_date AS teacher_hire_date,
            su.phonenumber AS teacher_phonenumber
        FROM
            edu_tea_stu ts
                JOIN
            edu_teachers t ON ts.teacher_id = t.teacher_id
                JOIN
            edu_students s ON ts.student_id = s.student_id
                JOIN
            sys_user su ON t.user_id = su.user_id
        <where>
            <if test="userId != null "> and s.user_id = #{userId}</if>
            <if test="gender != null "> and t.gender = #{gender}</if>
            <if test="name != null and name != ''"> and t.name like concat('%', #{name}, '%')</if>
            <if test="deptId != null "> and t.dept_id = #{deptId}</if>
            <if test="title != null "> and t.title = #{title}</if>
            <if test="hireDate != null "> and t.hire_date = #{hireDate}</if>
            <if test="phoneNumber != null and phoneNumber != ''"> and su.phonenumber like concat('%', #{phoneNumber}, '%')</if>
            <if test="params.beginHireDate != null and params.beginHireDate != '' and params.endHireDate != null and params.endHireDate != ''"> and t.hire_date between #{params.beginHireDate} and #{params.endHireDate}</if>
        </where>
    </select>

    <resultMap type="com.xjk.education.domain.vo.EduStudentSelectTeacherVo" id="EduStudentSelectTeachersResult">
        <result property="studentUserId" column="student_user_id" />
        <result property="studentName" column="student_name" />
        <result property="teacherName" column="teacher_name" />
        <result property="teacherGender" column="teacher_gender" />
        <result property="deptId" column="dept_id" />
        <result property="teacherTitle" column="teacher_title" />
        <result property="teacherHireDate" column="teacher_hire_date" />
        <result property="teacherPhonenumber" column="teacher_phonenumber" />
    </resultMap>


    <select id="selectEduStudentsByStudentId" parameterType="Long" resultMap="EduStudentsResult">
        <include refid="selectEduStudentsVo"/>
        where student_id = #{studentId}
    </select>

    <insert id="insertEduStudents" parameterType="EduStudents" useGeneratedKeys="true" keyProperty="studentId">
        insert into edu_students
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="gender != null and gender != ''">gender,</if>
            <if test="birthDate != null">birth_date,</if>
            <if test="major != null and major != ''">major,</if>
            <if test="deptId != null">dept_id,</if>
            <if test="classId != null">class_id,</if>
            <if test="enrollmentDate != null">enrollment_date,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="gender != null and gender != ''">#{gender},</if>
            <if test="birthDate != null">#{birthDate},</if>
            <if test="major != null and major != ''">#{major},</if>
            <if test="deptId != null">#{deptId},</if>
            <if test="classId != null">#{classId},</if>
            <if test="enrollmentDate != null">#{enrollmentDate},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateEduStudents" parameterType="EduStudents">
        update edu_students
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="gender != null and gender != ''">gender = #{gender},</if>
            <if test="birthDate != null">birth_date = #{birthDate},</if>
            <if test="major != null and major != ''">major = #{major},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="classId != null">class_id = #{classId},</if>
            <if test="enrollmentDate != null">enrollment_date = #{enrollmentDate},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where student_id = #{studentId}
    </update>

    <delete id="deleteEduStudentsByStudentId" parameterType="Long">
        delete from edu_students where student_id = #{studentId}
    </delete>

    <delete id="deleteEduStudentsByStudentIds" parameterType="String">
        delete from edu_students where student_id in
        <foreach item="studentId" collection="array" open="(" separator="," close=")">
            #{studentId}
        </foreach>
    </delete>
</mapper>
